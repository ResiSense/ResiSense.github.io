{"mappings":"A,C,KCAA,CACI,IAAM,EAA+B,SAAS,oBAAoB,CAAC,yBAAyB,CAAC,EAAE,EACxF,AAAC,CAAA,KAAQ,MAAM,AAAI,MAAM,4CAA6C,CAAA,IACvE,EAAyB,SAAS,cAAc,CAAC,qBAC/C,AAAA,CAAA,KAAQ,MAAM,AAAI,MAAM,sCAAuC,CAAA,IACjE,EAAuB,SAAS,cAAc,CAAC,mBAC7C,AAAA,CAAA,KAAQ,MAAM,AAAI,MAAM,oCAAqC,CAAA,IAErE,EAAuB,gBAAgB,CAAC,QAAS,KAC7C,EAAqB,eAAe,CAAC,QACrC,EAAqB,KAAK,EAC9B,GACA,EAA4B,gBAAgB,CAAC,WAAY,AAAA,IACjD,EAA4B,QAAQ,CAAC,EAAM,aAAa,GAC5D,EAAqB,eAAe,CAAC,OAAQ,CAAA,EACjD,EACJ,C,C","sources":["<anon>","scripts/hamburger-menu.ts"],"sourcesContent":["(() => {\n{\n    const paintedHamburgerMenuElement = document.getElementsByTagName(\"painted-hamburger-menu\")[0] || (()=>{\n        throw new Error(\"Painted hamburger menu element not found!\");\n    })();\n    const hamburgerButtonElement = document.getElementById(\"hamburger-button\") || (()=>{\n        throw new Error(\"Hamburger button element not found!\");\n    })();\n    const hamburgerMenuElement = document.getElementById(\"hamburger-menu\") || (()=>{\n        throw new Error(\"Hamburger menu element not found!\");\n    })();\n    hamburgerButtonElement.addEventListener(\"click\", ()=>{\n        hamburgerMenuElement.toggleAttribute(\"open\");\n        hamburgerMenuElement.focus();\n    });\n    paintedHamburgerMenuElement.addEventListener(\"focusout\", (event)=>{\n        if (paintedHamburgerMenuElement.contains(event.relatedTarget)) return;\n        hamburgerMenuElement.toggleAttribute(\"open\", false);\n    });\n}\n})();\n//# sourceMappingURL=hamburger-menu.js.map\n","{\n    const paintedHamburgerMenuElement = (document.getElementsByTagName('painted-hamburger-menu')[0]\n        || (() => { throw new Error('Painted hamburger menu element not found!') })()) as HTMLElement;\n    const hamburgerButtonElement = document.getElementById('hamburger-button')\n        || (() => { throw new Error('Hamburger button element not found!') })();\n    const hamburgerMenuElement = document.getElementById('hamburger-menu')\n        || (() => { throw new Error('Hamburger menu element not found!') })();\n\n    hamburgerButtonElement.addEventListener('click', () => {\n        hamburgerMenuElement.toggleAttribute('open');\n        hamburgerMenuElement.focus();\n    });\n    paintedHamburgerMenuElement.addEventListener('focusout', event => {\n        if (paintedHamburgerMenuElement.contains(event.relatedTarget as Node)) { return; }\n        hamburgerMenuElement.toggleAttribute('open', false);\n    });\n}"],"names":["paintedHamburgerMenuElement","document","getElementsByTagName","Error","hamburgerButtonElement","getElementById","hamburgerMenuElement","addEventListener","toggleAttribute","focus","event","contains","relatedTarget"],"version":3,"file":"hamburger-menu.js.map"}