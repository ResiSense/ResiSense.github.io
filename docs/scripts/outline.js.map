{"mappings":"A,C,KCAA,CACQ,OAAO,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,QAAQ,CAAC,QAE7C,CAAA,AADuB,SAAS,aAAa,CAAC,mBAC/B,KAAK,CAAC,UAAU,CAAG,QAAlC,EAGJ,IAAM,EAAgC,SAAS,cAAc,CAAC,4BACxD,EAAyB,SAAS,aAAa,CAAC,oBAAoB,iBAAiB,0BAG3F,SAAS,IACL,GAAI,CAAC,GACD,CAAC,EAD0B,OAE/B,IAAM,EACF,IAAI,EAAuB,CAAC,OAAO,GAC9B,IAAI,CAAC,AAAA,GAAW,EAAQ,qBAAqB,GAAG,GAAG,CAAG,MAAQ,CAAsB,CAAC,EAAE,CAC1F,EAAgC,SAAS,cAAc,CAAC,CAAC,UAAU,EAAE,EAAc,EAAE,CAAC,CAAC,EACvF,EAA8B,SAAS,cAAc,CAAC,CAAC,UAAU,EAAE,CAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACvG,CAAA,EAA8B,KAAK,CAAC,GAAG,CAAG,CAAC,EAAE,EAA8B,qBAAqB,GAAG,GAAG,CAAG,EAA4B,qBAAqB,GAAG,GAAG,CAAC,EAAE,CAAC,CACpK,EAA8B,KAAK,CAAC,IAAI,CAAG,CAAC,EAAE,EAAI,EAA8B,qBAAqB,GAAG,IAAI,CAAG,EAA4B,qBAAqB,GAAG,IAAI,CAAC,EAAE,CAAC,AAC/K,CAZA,OAAO,gBAAgB,CAAC,mBAAoB,GAC5C,OAAO,gBAAgB,CAAC,SAAU,EAYtC,C,C","sources":["<anon>","scripts/outline.ts"],"sourcesContent":["(() => {\n{\n    if (window.location.pathname.split(\"/\").includes(\"404\")) {\n        const outlineElement = document.querySelector(\"painted-outline\");\n        outlineElement.style.visibility = \"hidden\";\n    }\n    const outlineProgressPointerElement = document.getElementById(\"outline-progress-pointer\");\n    const contentHeadingElements = document.querySelector(\"painted-content\")?.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n    window.addEventListener(\"DOMContentLoaded\", calculateProgressOutlineElementPosition);\n    window.addEventListener(\"scroll\", calculateProgressOutlineElementPosition);\n    function calculateProgressOutlineElementPosition() {\n        if (!contentHeadingElements) return;\n        if (!outlineProgressPointerElement) return;\n        const latestHeading = [\n            ...contentHeadingElements\n        ].reverse().find((heading)=>heading.getBoundingClientRect().top < 180) || contentHeadingElements[0];\n        const currentProgressOutlineElement = document.getElementById(`--outline-${latestHeading.id}`);\n        const firstProgressOutlineElement = document.getElementById(`--outline-${contentHeadingElements[0].id}`);\n        outlineProgressPointerElement.style.top = `${currentProgressOutlineElement.getBoundingClientRect().top - firstProgressOutlineElement.getBoundingClientRect().top}px`;\n        outlineProgressPointerElement.style.left = `${2 + currentProgressOutlineElement.getBoundingClientRect().left - firstProgressOutlineElement.getBoundingClientRect().left}px`;\n    }\n}\n})();\n//# sourceMappingURL=outline.js.map\n","{\n    if (window.location.pathname.split('/').includes('404')) {\n        const outlineElement = document.querySelector('painted-outline') as HTMLElement;\n        outlineElement.style.visibility = 'hidden';\n    }\n\n    const outlineProgressPointerElement = document.getElementById('outline-progress-pointer');\n    const contentHeadingElements = document.querySelector('painted-content')?.querySelectorAll('h1, h2, h3, h4, h5, h6');\n    window.addEventListener('DOMContentLoaded', calculateProgressOutlineElementPosition);\n    window.addEventListener('scroll', calculateProgressOutlineElementPosition);\n    function calculateProgressOutlineElementPosition() {\n        if (!contentHeadingElements) { return; }\n        if (!outlineProgressPointerElement) { return; }\n        const latestHeading =\n            [...contentHeadingElements].reverse()\n                .find(heading => heading.getBoundingClientRect().top < 180) || contentHeadingElements[0];\n        const currentProgressOutlineElement = document.getElementById(`--outline-${latestHeading.id}`) as HTMLElement;\n        const firstProgressOutlineElement = document.getElementById(`--outline-${contentHeadingElements[0].id}`) as HTMLElement;\n        outlineProgressPointerElement.style.top = `${currentProgressOutlineElement.getBoundingClientRect().top - firstProgressOutlineElement.getBoundingClientRect().top}px`;\n        outlineProgressPointerElement.style.left = `${2 + currentProgressOutlineElement.getBoundingClientRect().left - firstProgressOutlineElement.getBoundingClientRect().left}px`;\n    }\n}"],"names":["window","location","pathname","split","includes","outlineElement","document","querySelector","style","visibility","outlineProgressPointerElement","getElementById","contentHeadingElements","querySelectorAll","calculateProgressOutlineElementPosition","latestHeading","reverse","find","heading","getBoundingClientRect","top","currentProgressOutlineElement","id","firstProgressOutlineElement","left","addEventListener"],"version":3,"file":"outline.js.map"}