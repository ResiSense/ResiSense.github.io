{"mappings":"ACCI,SAAS,gBAAgB,CAAC,mBAAoB,KAC1C,SAAS,gBAAgB,CAAC,qBACrB,OAAO,CAAC,AAAC,IAEN,IAAM,EAAO,AADH,EACK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAC5B,GAAM,WAAW,gBAEtB,AAJU,EAIR,gBAAgB,CAAC,aAAc,KAC7B,QAAQ,GAAG,CAAC,eAAgB,GAE5B,IAAM,EAAM,SAAS,aAAa,CAAC,QACnC,EAAI,SAAS,CAAC,GAAG,CAAC,iBAClB,EAAI,SAAS,CAAG,SAAS,cAAc,CAAC,IAAO,WAAa,aAE5D,AAXM,EAWJ,WAAW,CAAC,GAEd,IAAM,EAAU,EAAI,qBAAqB,GACzC,QAAQ,GAAG,CAAC,YAAa,GACrB,EAAQ,KAAK,CAAG,OAAO,UAAU,EACjC,CAAA,EAAI,KAAK,CAAC,IAAI,CAAG,CAAC,EAAE,OAAO,UAAU,CAAG,EAAQ,KAAK,CAAC,EAAE,CAAC,AAAD,CAEhE,GAEA,AApBU,EAoBR,gBAAgB,CAAC,aAAc,KAC7B,QAAQ,GAAG,CAAC,eAAgB,GAE5B,IAAM,EAAM,AAvBN,EAuBQ,aAAa,CAAC,kBACxB,GAAO,AAxBL,EAwBO,WAAW,CAAC,EAC7B,GACJ,EACR","sources":["<anon>","scripts/references.ts"],"sourcesContent":["(() => {\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    document.querySelectorAll(\"painted-content a\").forEach((e)=>{\n        const a = e;\n        const href = a.href.split(\"#\")[1];\n        if (!href?.startsWith(\"reference-\")) return;\n        a.addEventListener(\"mouseenter\", ()=>{\n            console.log(\"Mouse enter:\", href);\n            const box = document.createElement(\"span\");\n            box.classList.add(\"reference-box\");\n            box.innerHTML = document.getElementById(href)?.innerHTML || \"Loading...\";\n            a.appendChild(box);\n            const boxRect = box.getBoundingClientRect();\n            console.log(\"Box rect:\", boxRect);\n            if (boxRect.right > window.innerWidth) box.style.left = `${window.innerWidth - boxRect.width}px`;\n        });\n        a.addEventListener(\"mouseleave\", ()=>{\n            console.log(\"Mouse leave:\", href);\n            const box = a.querySelector(\".reference-box\");\n            if (box) a.removeChild(box);\n        });\n    });\n});\n\n})();\n//# sourceMappingURL=references.js.map\n","{\n    document.addEventListener('DOMContentLoaded', () => {\n        document.querySelectorAll('painted-content a')\n            .forEach((e: Element) => {\n                const a = e as HTMLAnchorElement;\n                const href = a.href.split('#')[1];\n                if (!href?.startsWith('reference-')) { return; }\n\n                a.addEventListener('mouseenter', () => {\n                    console.log('Mouse enter:', href);\n\n                    const box = document.createElement('span');\n                    box.classList.add('reference-box');\n                    box.innerHTML = document.getElementById(href)?.innerHTML || 'Loading...';\n\n                    a.appendChild(box);\n\n                    const boxRect = box.getBoundingClientRect();\n                    console.log('Box rect:', boxRect);\n                    if (boxRect.right > window.innerWidth) {\n                        box.style.left = `${window.innerWidth - boxRect.width}px`;\n                    }\n                });\n\n                a.addEventListener('mouseleave', () => {\n                    console.log('Mouse leave:', href);\n\n                    const box = a.querySelector('.reference-box');\n                    if (box) { a.removeChild(box); }\n                });\n            });\n    });\n}"],"names":["document","addEventListener","querySelectorAll","forEach","e","href","a","split","startsWith","console","log","box","createElement","classList","add","innerHTML","getElementById","appendChild","boxRect","getBoundingClientRect","right","window","innerWidth","style","left","width","querySelector","removeChild"],"version":3,"file":"references.js.map"}