{"mappings":"A,C,K,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,ECYA,SAAS,EAAc,CAAc,EACjC,OAAO,mBAAmB,GACrB,OAAO,CAAC,OAAQ,OAChB,OAAO,CAAC,OAAQ,OAChB,OAAO,CAAC,OAAQ,OAChB,OAAO,CAAC,OAAQ,OAChB,OAAO,CAAC,OAAQ,OAChB,OAAO,CAAC,QAAS,OACjB,OAAO,CAAC,OAAQ,OAChB,OAAO,CAAC,OAAQ,OAChB,OAAO,CAAC,OAAQ,MACzB,CAEA,SAAS,EAAgB,CAA8B,CAAE,CAAa,EAClE,IAAM,EAAc,SAAS,aAAa,CAAC,MAC3C,CAAA,EAAY,KAAK,CAAC,QAAQ,CAAG,WAC7B,EAAY,KAAK,CAAC,UAAU,CAAG,SAC/B,EAAY,KAAK,CAAC,MAAM,CAAG,EAC3B,EAAQ,WAAW,CAAC,GACpB,IAAM,EAAS,OAAO,gBAAgB,CAAC,GAAa,MAAM,CAE1D,OADA,EAAQ,WAAW,CAAC,GACb,WAAW,EACtB,C,E,E,O,C,gB,I,G,E,E,O,C,kB,I,GAlCA,OAAO,UAAU,CAAC,KACd,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,gBAChC,EAAG,KAEH,OAAO,gBAAgB,CAAC,mBACxB,WACI,IAAM,EAAS,YAAY,gBAAgB,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAC7D,EAAO,QAAQ,CAAC,cAChB,OAAO,OAAO,CAAC,YAAY,CAAC,KAAM,GAAI,EAAO,KAAK,CAAC,IAAI,CAAC,EAAE,CAElE,E,G,I,E,E,QCRA,EACI,IAAM,EAAwB,SAAS,oBAAoB,CAAC,kBAAkB,CAAC,EAAE,CAC3E,EAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,CAElD,EAAuB,EAAsB,gBAAgB,CAAC,EAAW,IAAI,CAAC,OAGhF,EAAoD,CAAC,EAEzD,SAAS,IACL,EAAW,OAAO,CAAC,AAAA,IACf,IAAM,EAAU,EAAsB,oBAAoB,CAAC,EAAQ,CAAC,EAAE,CACtE,GAAI,CAAC,EAAW,OAChB,IAAM,EAAU,AAAA,CAAA,EAAA,EAAA,eAAc,AAAd,EAAgB,EAAS,iBAAiB,GAAS,gBAAgB,CAAC,cACpF,CAAA,CAAgB,CAAC,EAAQ,CAAG,EAXR,CAYxB,EACJ,CAQA,SAAS,IACL,IAAK,IAAM,KAAW,EAAwB,EAAQ,SAAS,CAAC,MAAM,CAAC,SAAU,CAAA,GACjF,IAAK,IAAM,KAAW,EAAsB,CAExC,IAAM,EAAU,EAAQ,OAAO,CAAC,WAAW,GAGrC,EAAiB,AAFJ,EAAQ,qBAAqB,GAAG,GAAG,EAC9B,CAAA,CAAgB,CAAC,EAAQ,EAAI,CAAA,EAGrD,GADA,EAAQ,SAAS,CAAC,MAAM,CAAC,SAAU,GAC/B,CAAC,EAAkB,KAC3B,CACJ,CAIA,SAAS,IAGL,AAFwB,CAAA,SAAS,aAAa,CAAC,oBAAoB,iBAAiB,2BAC7E,AAAC,CAAA,KAAQ,MAAM,AAAI,MAAM,8BAA+B,CAAA,GAAA,EAC/C,OAAO,CAAC,AAAA,IAEpB,AADqB,EAAsB,aAAa,CAAC,CAAC,mBAAmB,EAAE,EAAQ,EAAE,CAAC,EAAE,CAAC,EAChF,KAAK,CAAC,eAAe,CAAG,iBAAiB,GAAS,eAAe,AAClF,EACJ,CAtCA,OAAO,gBAAgB,CAAC,mBAAoB,GAU5C,OAAO,gBAAgB,CAAC,mBAAoB,GAC5C,OAAO,gBAAgB,CAAC,SAAU,GAClC,OAAO,gBAAgB,CAAC,SAAU,KAC9B,IACA,GACJ,GAcA,OAAO,gBAAgB,CAAC,mBAAoB,GAC5C,OAAO,gBAAgB,CAAC,SAAU,EAStC,C,C","sources":["<anon>","scripts/globalLibrary.ts","scripts/content.ts"],"sourcesContent":["(() => {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"df1N6\", function(module, exports) {\n\n$parcel$export(module.exports, \"safeURIEncode\", () => $9171b13acd3e378e$export$f912fcae84d27ddf);\n$parcel$export(module.exports, \"convertToPixels\", () => $9171b13acd3e378e$export$a0b4c99153c9b294);\nwindow.setTimeout(()=>{\n    document.body.classList.add('post-buffered');\n}, 100);\nwindow.addEventListener('DOMContentLoaded', $9171b13acd3e378e$var$stripUrlTextFragment);\nfunction $9171b13acd3e378e$var$stripUrlTextFragment() {\n    const rawURL = performance.getEntriesByType(\"navigation\")[0].name;\n    if (rawURL.includes('#:~:text=')) window.history.replaceState(null, '', rawURL.split('#')[0]);\n}\nfunction $9171b13acd3e378e$export$f912fcae84d27ddf(string) {\n    return encodeURIComponent(string).replace(/[-]/g, '%2D').replace(/[.]/g, '%2E').replace(/[_]/g, '%5F').replace(/[~]/g, '%7E').replace(/[*]/g, '%2A').replace(/['']/g, '%27').replace(/[(]/g, '%28').replace(/[)]/g, '%29').replace(/[,]/g, '%2C');\n}\nfunction $9171b13acd3e378e$export$a0b4c99153c9b294(element, value) {\n    const tempElement = document.createElement('div');\n    tempElement.style.position = 'absolute';\n    tempElement.style.visibility = 'hidden';\n    tempElement.style.height = value;\n    element.appendChild(tempElement);\n    const pixels = window.getComputedStyle(tempElement).height;\n    element.removeChild(tempElement);\n    return parseFloat(pixels);\n}\n\n});\n\n\nvar $df1N6 = parcelRequire(\"df1N6\");\n{\n    const paintedContentElement = document.getElementsByTagName('painted-content')[0];\n    const stickyTags = [\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6'\n    ];\n    const STICKY_TOLERANCE_PX = 1;\n    const stickyHeaderElements = paintedContentElement.querySelectorAll(stickyTags.join(', '));\n    let stickyTopHeights = {};\n    window.addEventListener('DOMContentLoaded', calculateStickyTopHeights);\n    function calculateStickyTopHeights() {\n        stickyTags.forEach((tagName)=>{\n            const element = paintedContentElement.getElementsByTagName(tagName)[0];\n            if (!element) return;\n            const thisTop = (0, $df1N6.convertToPixels)(element, getComputedStyle(element).getPropertyValue('--this-top'));\n            stickyTopHeights[tagName] = thisTop + STICKY_TOLERANCE_PX;\n        });\n    }\n    /* -------------------------------------------------------------------------- */ window.addEventListener('DOMContentLoaded', determineStickiness);\n    window.addEventListener('scroll', determineStickiness);\n    window.addEventListener('resize', ()=>{\n        calculateStickyTopHeights();\n        determineStickiness();\n    });\n    function determineStickiness() {\n        for (const element of stickyHeaderElements)element.classList.toggle('sticky', false);\n        for (const element of stickyHeaderElements){\n            //\n            const tagName = element.tagName.toLowerCase();\n            const elementTop = element.getBoundingClientRect().top;\n            const stickyTopHeight = stickyTopHeights[tagName] ?? 0;\n            const shouldBeSticky = elementTop <= stickyTopHeight;\n            element.classList.toggle('sticky', shouldBeSticky);\n            if (!shouldBeSticky) break;\n        }\n    }\n    /* -------------------------------------------------------------------------- */ window.addEventListener('DOMContentLoaded', updateScrollMarkerMargins);\n    window.addEventListener('resize', updateScrollMarkerMargins);\n    function updateScrollMarkerMargins() {\n        const headingElements = document.querySelector('painted-content')?.querySelectorAll('h1, h2, h3, h4, h5, h6') || (()=>{\n            throw new Error('Heading elements not found!');\n        })();\n        headingElements.forEach((heading)=>{\n            const scrollMarker = paintedContentElement.querySelector(`.scroll-marker[id=\"${heading.id}\"]`);\n            scrollMarker.style.scrollMarginTop = getComputedStyle(heading).scrollMarginTop;\n        });\n    }\n}\n})();\n//# sourceMappingURL=content.js.map\n","window.setTimeout(() => {\n    document.body.classList.add('post-buffered');\n}, 100);\n\nwindow.addEventListener('DOMContentLoaded', stripUrlTextFragment);\nfunction stripUrlTextFragment() {\n    const rawURL = performance.getEntriesByType(\"navigation\")[0].name;\n    if (rawURL.includes('#:~:text=')) {\n        window.history.replaceState(null, '', rawURL.split('#')[0]);\n    }\n}\n\nfunction safeURIEncode(string: string): string {\n    return encodeURIComponent(string)\n        .replace(/[-]/g, '%2D')\n        .replace(/[.]/g, '%2E')\n        .replace(/[_]/g, '%5F')\n        .replace(/[~]/g, '%7E')\n        .replace(/[*]/g, '%2A')\n        .replace(/['']/g, '%27')\n        .replace(/[(]/g, '%28')\n        .replace(/[)]/g, '%29')\n        .replace(/[,]/g, '%2C');\n}\n\nfunction convertToPixels(element: Element | HTMLElement, value: string): number {\n    const tempElement = document.createElement('div');\n    tempElement.style.position = 'absolute';\n    tempElement.style.visibility = 'hidden';\n    tempElement.style.height = value;\n    element.appendChild(tempElement);\n    const pixels = window.getComputedStyle(tempElement).height;\n    element.removeChild(tempElement);\n    return parseFloat(pixels);\n}\n\nexport { convertToPixels, safeURIEncode };","import { convertToPixels } from \"./globalLibrary\";\n\n{\n    const paintedContentElement = document.getElementsByTagName('painted-content')[0];\n    const stickyTags = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6',] as const;\n    const STICKY_TOLERANCE_PX = 1;\n    const stickyHeaderElements = paintedContentElement.querySelectorAll(stickyTags.join(', '));\n    type StickyTag = typeof stickyTags[number];\n\n    let stickyTopHeights: { [key in StickyTag]?: number } = {};\n    window.addEventListener('DOMContentLoaded', calculateStickyTopHeights);\n    function calculateStickyTopHeights() {\n        stickyTags.forEach(tagName => {\n            const element = paintedContentElement.getElementsByTagName(tagName)[0];\n            if (!element) { return; }\n            const thisTop = convertToPixels(element, getComputedStyle(element).getPropertyValue('--this-top'));\n            stickyTopHeights[tagName] = thisTop + STICKY_TOLERANCE_PX;\n        });\n    }\n    /* -------------------------------------------------------------------------- */\n    window.addEventListener('DOMContentLoaded', determineStickiness);\n    window.addEventListener('scroll', determineStickiness);\n    window.addEventListener('resize', () => {\n        calculateStickyTopHeights();\n        determineStickiness();\n    });\n    function determineStickiness() {\n        for (const element of stickyHeaderElements) { element.classList.toggle('sticky', false); }\n        for (const element of stickyHeaderElements) {\n            //\n            const tagName = element.tagName.toLowerCase() as StickyTag;\n            const elementTop = element.getBoundingClientRect().top;\n            const stickyTopHeight = stickyTopHeights[tagName] ?? 0;\n            const shouldBeSticky = elementTop <= stickyTopHeight;\n            element.classList.toggle('sticky', shouldBeSticky);\n            if (!shouldBeSticky) { break; }\n        };\n    }\n    /* -------------------------------------------------------------------------- */\n    window.addEventListener('DOMContentLoaded', updateScrollMarkerMargins);\n    window.addEventListener('resize', updateScrollMarkerMargins);\n    function updateScrollMarkerMargins() {\n        const headingElements = document.querySelector('painted-content')?.querySelectorAll('h1, h2, h3, h4, h5, h6')\n            || (() => { throw new Error('Heading elements not found!') })();\n        headingElements.forEach(heading => {\n            const scrollMarker = paintedContentElement.querySelector(`.scroll-marker[id=\"${heading.id}\"]`) as HTMLElement;\n            scrollMarker.style.scrollMarginTop = getComputedStyle(heading).scrollMarginTop;\n        });\n    }\n}"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$9171b13acd3e378e$export$f912fcae84d27ddf","string","encodeURIComponent","replace","$9171b13acd3e378e$export$a0b4c99153c9b294","element","value","tempElement","document","createElement","style","position","visibility","height","appendChild","pixels","window","getComputedStyle","removeChild","parseFloat","setTimeout","body","classList","add","addEventListener","rawURL","performance","getEntriesByType","name","includes","history","replaceState","split","$df1N6","paintedContentElement","getElementsByTagName","stickyTags","stickyHeaderElements","querySelectorAll","join","stickyTopHeights","calculateStickyTopHeights","forEach","tagName","thisTop","convertToPixels","getPropertyValue","determineStickiness","toggle","toLowerCase","shouldBeSticky","elementTop","getBoundingClientRect","top","updateScrollMarkerMargins","headingElements","querySelector","heading","scrollMarker","scrollMarginTop"],"version":3,"file":"content.js.map"}